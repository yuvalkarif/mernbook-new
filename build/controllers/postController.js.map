{"version":3,"sources":["../../src/controllers/postController.js"],"names":["createPost","req","res","next","id","body","picture","Types","ObjectId","isValid","user","newPost","User","findOne","_id","err","Post","creator","posts","push","save","send","error","status","updatePost","postId","post","populate","removePost","filter","newUser","findByIdAndDelete","readPost","params","createComment","newComment","comments","removeComment","commentId","comment","readPostsByFollowed","postIds","path","select","followings","following","concat","find","$in","distinct","likePost","likes"],"mappings":"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","sourcesContent":["import User from \"../models/user\";\nimport Post from \"../models/post\";\nimport { Types } from \"mongoose\";\nimport addObjToArray from \"../helpers/addObjToArray\";\n\nexport const createPost = async (req, res, next) => {\n  const { id, body, picture } = req.body;\n  if (id && Types.ObjectId.isValid(id)) {\n    let user;\n    let newPost;\n    try {\n      user = await User.findOne({ _id: id });\n    } catch (err) {\n      next(err);\n    }\n    if (user) {\n      newPost = new Post({\n        creator: user,\n        body: body,\n        picture,\n      });\n      try {\n        user.posts.push(newPost);\n        await newPost.save();\n        await user.save();\n        res.send(newPost.id);\n      } catch (error) {\n        next(error);\n      }\n    } else {\n      res.status(404).send(\"User not Found\");\n    }\n  } else {\n    res.status(404).send(\"No Valid User Detected\");\n  }\n};\n\nexport const updatePost = async (req, res, next) => {\n  const { id, postId, body, picture } = req.body;\n  if (\n    id &&\n    postId &&\n    Types.ObjectId.isValid(id) &&\n    Types.ObjectId.isValid(postId)\n  ) {\n    let user;\n    let post;\n    try {\n      user = await User.findOne({ _id: id });\n      post = await Post.findOne({ _id: postId }).populate(\"creator\");\n    } catch (err) {\n      next(err);\n    }\n\n    if (user.id === post.creator.id && post && user) {\n      post.body = body;\n      post.picture = picture;\n      try {\n        await post.save();\n      } catch (error) {\n        next(error);\n      }\n      res.send(\"Post Updated Successfully\");\n    } else {\n      res.send(\"You are not the creator of the post or it doesn't exists\");\n    }\n  } else {\n    res.send(id ? \"No Valid Post Detected\" : \"No Valid User Detected\");\n  }\n};\n\nexport const removePost = async (req, res, next) => {\n  const { id, postId } = req.body;\n  if (\n    id &&\n    postId &&\n    Types.ObjectId.isValid(id) &&\n    Types.ObjectId.isValid(postId)\n  ) {\n    let user;\n    let post;\n    try {\n      user = await User.findOne({ _id: id })?.populate(\"posts\");\n      post = await Post.findOne({ _id: postId })?.populate(\"creator\");\n    } catch (err) {\n      next(err);\n    }\n    if (user && post) {\n      user.posts = user.posts.filter((post) => post.id != postId);\n      let newUser;\n      try {\n        await user.save();\n        await Post.findByIdAndDelete(postId);\n        newUser = await User.findOne({ _id: id });\n      } catch (error) {\n        next(error);\n      }\n\n      res.send(postId);\n    } else {\n      res.send(post ? \"No Valid User Found\" : \"No Valid Post Found\");\n    }\n  } else {\n    res.send(id ? \"No Valid Post Detected\" : \"No Valid User Detected\");\n  }\n};\n\nexport const readPost = async (req, res, next) => {\n  const { postId } = req.params;\n  if (postId && Types.ObjectId.isValid(postId)) {\n    let post;\n    try {\n      post = await Post.findOne({ _id: postId });\n    } catch (err) {\n      next(err);\n    }\n    if (post) {\n      res.send(post);\n    } else {\n      res.status(404).send(\"Post not Found\");\n    }\n  } else {\n    res.send(\"No Valid Post ID\");\n  }\n};\n\nexport const createComment = async (req, res, next) => {\n  const { id, postId, body } = req.body;\n  if (\n    postId &&\n    id &&\n    Types.ObjectId.isValid(id) &&\n    Types.ObjectId.isValid(postId)\n  ) {\n    let post;\n    let user;\n    try {\n      user = await User.findOne({ _id: id });\n      post = await Post.findOne({ _id: postId });\n    } catch (err) {\n      next(err);\n    }\n    if (post) {\n      const newComment = { body, creator: user.id };\n      post.comments.push(newComment);\n      post.save();\n      res.send(post.comments);\n    } else {\n      res.status(404).send(\"Post not Found\");\n    }\n  } else {\n    res\n      .status(404)\n      .send(id ? \"No Valid PostID Detected\" : \"No Valid UserID Detected\");\n  }\n};\n\nexport const removeComment = async (req, res, next) => {\n  const { commentId, postId } = req.body;\n  if (\n    commentId &&\n    postId &&\n    Types.ObjectId.isValid(postId) &&\n    Types.ObjectId.isValid(commentId)\n  ) {\n    let post;\n    try {\n      post = await Post.findOne({ _id: postId });\n    } catch (error) {\n      next(error);\n    }\n    post.comments = post.comments.filter((comment) => comment.id !== commentId);\n    try {\n      await post.save();\n    } catch (error) {\n      next(error);\n    }\n    res.send(post.comments);\n  } else {\n    res\n      .status(404)\n      .send(postId ? \"No Valid PostID Detected\" : \"No Valid Comment Detected\");\n  }\n};\n\nexport const readPostsByFollowed = async (req, res, next) => {\n  const { id } = req.params;\n  if (id && Types.ObjectId.isValid(id)) {\n    let user;\n    let postIds = [];\n    let posts;\n    try {\n      user = await User.findOne({ _id: id }, \"following\").populate({\n        path: \"following\",\n        select: \"posts\",\n      });\n    } catch (error) {\n      next(error);\n    }\n    if (user) {\n      for (const followings of user.following) {\n        postIds = postIds.concat(followings.posts);\n      }\n      try {\n        posts = await Post.find({ _id: { $in: postIds } }).distinct(\"_id\");\n      } catch (error) {\n        next(error);\n      }\n      res.send(posts);\n    } else {\n      res.status(404).send(\"User not Found\");\n    }\n  } else {\n    res.status(404).send(\"No ID\");\n  }\n};\n\nexport const likePost = async (req, res, next) => {\n  const { id, postId } = req.body;\n  if (\n    id &&\n    postId &&\n    Types.ObjectId.isValid(id) &&\n    Types.ObjectId.isValid(postId)\n  ) {\n    let user;\n    let post;\n    try {\n      user = await User.findOne({ _id: id });\n      post = await Post.findOne({ _id: postId });\n    } catch (error) {\n      next(error);\n    }\n    if (user && post) {\n      post.likes = addObjToArray(post.likes, id);\n      try {\n        await post.save();\n      } catch (error) {\n        next(error);\n      }\n      res.send(post.likes);\n    } else {\n      res.status(404).send(user ? \"Post not Found\" : \"User not Found\");\n    }\n  } else {\n    res\n      .status(404)\n      .send(\n        id\n          ? \"No Valid Post Detected\"\n          : postId\n          ? \"No Valid UserID Detected\"\n          : \"No Valid User and Post ID Detected\"\n      );\n  }\n};\n"],"file":"postController.js"}