{"version":3,"sources":["../../src/models/user.js"],"names":["Schema","model","mongoose","userSchema","username","type","String","required","displayname","password","following","Types","ObjectId","ref","followers","posts","picture","default","isAdmin","Boolean","about","summary","work","education","birthday","Date","plugin","mongooseFuzzySearching","fields","User"],"mappings":";;;;;;;AAAA;;AAEA;;;;AADA,IAAM;AAAEA,EAAAA,MAAF;AAAUC,EAAAA;AAAV,IAAoBC,iBAA1B;AAGA,IAAMC,UAAU,GAAG,IAAIH,MAAJ,CAAW;AAC5BI,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B,GADkB;AAE5BC,EAAAA,WAAW,EAAE;AAAEH,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B,GAFe;AAG5BE,EAAAA,QAAQ,EAAE;AAAEJ,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B,GAHkB;AAI5BG,EAAAA,SAAS,EAAE,CAAC;AAAEL,IAAAA,IAAI,EAAEH,kBAASS,KAAT,CAAeC,QAAvB;AAAiCC,IAAAA,GAAG,EAAE;AAAtC,GAAD,CAJiB;AAK5BC,EAAAA,SAAS,EAAE,CAAC;AAAET,IAAAA,IAAI,EAAEH,kBAASS,KAAT,CAAeC,QAAvB;AAAiCC,IAAAA,GAAG,EAAE;AAAtC,GAAD,CALiB;AAM5BE,EAAAA,KAAK,EAAE,CACL;AACEV,IAAAA,IAAI,EAAEH,kBAASS,KAAT,CAAeC,QADvB;AAEEC,IAAAA,GAAG,EAAE;AAFP,GADK,CANqB;AAY5BG,EAAAA,OAAO,EAAE;AAAEX,IAAAA,IAAI,EAAEC,MAAR;AAAgBW,IAAAA,OAAO,EAAE;AAAzB,GAZmB;AAa5BC,EAAAA,OAAO,EAAE;AACPb,IAAAA,IAAI,EAAEc,OADC;AAEPF,IAAAA,OAAO,EAAE;AAFF,GAbmB;AAiB5BG,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAE;AAAEhB,MAAAA,IAAI,EAAEC;AAAR,KADJ;AAELgB,IAAAA,IAAI,EAAE;AAAEjB,MAAAA,IAAI,EAAEC;AAAR,KAFD;AAGLiB,IAAAA,SAAS,EAAE;AAAElB,MAAAA,IAAI,EAAEC;AAAR,KAHN;AAILkB,IAAAA,QAAQ,EAAE;AAAEnB,MAAAA,IAAI,EAAEoB;AAAR;AAJL;AAjBqB,CAAX,CAAnB;AAyBAtB,UAAU,CAACuB,MAAX,CAAkBC,+BAAlB,EAA0C;AACxCC,EAAAA,MAAM,EAAE,CAAC,UAAD,EAAa,aAAb;AADgC,CAA1C;AAIA,IAAMC,IAAI,GAAG5B,KAAK,CAAC,MAAD,EAASE,UAAT,CAAlB;eACe0B,I","sourcesContent":["import mongoose from \"mongoose\";\nconst { Schema, model } = mongoose;\nimport mongooseFuzzySearching from \"mongoose-fuzzy-searching\";\n\nconst userSchema = new Schema({\n  username: { type: String, required: true },\n  displayname: { type: String, required: true },\n  password: { type: String, required: true },\n  following: [{ type: mongoose.Types.ObjectId, ref: \"User\" }],\n  followers: [{ type: mongoose.Types.ObjectId, ref: \"User\" }],\n  posts: [\n    {\n      type: mongoose.Types.ObjectId,\n      ref: \"Post\",\n    },\n  ],\n  picture: { type: String, default: \"https://i.imgur.com/von5DZb.jpg\" },\n  isAdmin: {\n    type: Boolean,\n    default: false,\n  },\n  about: {\n    summary: { type: String },\n    work: { type: String },\n    education: { type: String },\n    birthday: { type: Date },\n  },\n});\n\nuserSchema.plugin(mongooseFuzzySearching, {\n  fields: [\"username\", \"displayname\"],\n});\n\nconst User = model(\"User\", userSchema);\nexport default User;\n"],"file":"user.js"}